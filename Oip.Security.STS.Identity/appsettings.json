{
  "ConnectionStrings": {
    "ConfigurationDbConnection": "Data Source=./../Oip.Security/Oip.Security.db;Cache=Shared"
  },
  "DatabaseProviderConfiguration": {
    "ProviderType": "Sqlite"
  },
  "CertificateConfiguration": {
    "UseTemporarySigningKeyForDevelopment": true,
    "CertificateStoreLocation": "LocalMachine",
    "CertificateValidOnly": true,
    "UseSigningCertificateThumbprint": false,
    "SigningCertificateThumbprint": "",
    "UseSigningCertificatePfxFile": false,
    "SigningCertificatePfxFilePath": "",
    "SigningCertificatePfxFilePassword": "",
    "UseValidationCertificatePfxFile": false,
    "ValidationCertificatePfxFilePath": "",
    "ValidationCertificatePfxFilePassword": "",
    "UseValidationCertificateThumbprint": false,
    "ValidationCertificateThumbprint": "",
    "UseSigningCertificateForAzureKeyVault": false,
    "UseValidationCertificateForAzureKeyVault": false
  },
  "RegisterConfiguration": {
    "Enabled": true
  },
  "ExternalProvidersConfiguration": {
    "UseGitHubProvider": false,
    "GitHubClientId": "",
    "GitHubClientSecret": "",
    "UseAzureAdProvider": false,
    "AzureAdClientId": "",
    "AzureAdTenantId": "",
    "AzureInstance": "",
    "AzureAdSecret": "",
    "AzureAdCallbackPath": "",
    "AzureDomain": ""
  },
  "SmtpConfiguration": {
    "Host": "",
    "Login": "",
    "Password": ""
  },
  "SendGridConfiguration": {
    "ApiKey": "",
    "SourceEmail": "",
    "SourceName": ""
  },
  "LoginConfiguration": {
    "ResolutionPolicy": "Username"
  },
  "AdminConfiguration": {
    "PageTitle": "Open industrial platform",
    "HomePageLogoUri": "~/images/skoruba-icon.png",
    "FaviconUri": "~/favicon.ico",
    "Theme": null,
    "CustomThemeCss": null,
    "IdentityAdminBaseUrl": "https://localhost:44303",
    "AdministrationRole": "SkorubaIdentityAdminAdministrator"
  },
  "CspTrustedDomains": [
    "www.gravatar.com",
    "fonts.googleapis.com",
    "fonts.gstatic.com"
  ],
  "CultureConfiguration": {
    "Cultures": [],
    "DefaultCulture": null
  },
  "IdentityServerOptions": {
    "Events": {
      "RaiseErrorEvents": true,
      "RaiseInformationEvents": true,
      "RaiseFailureEvents": true,
      "RaiseSuccessEvents": true
    }
  },
  "BasePath": "",
  "IdentityOptions": {
    "Password": {
      "RequiredLength": 8
    },
    "User": {
      "RequireUniqueEmail": true
    },
    "SignIn": {
      "RequireConfirmedAccount": false
    }
  },
  "DataProtectionConfiguration": {
    "ProtectKeysWithAzureKeyVault": false
  },
  "AzureKeyVaultConfiguration": {
    "AzureKeyVaultEndpoint": "",
    "ClientId": "",
    "ClientSecret": "",
    "TenantId": "",
    "GitHubCallbackPath": "",
    "UseClientCredentials": true,
    "IdentityServerCertificateName": "",
    "DataProtectionKeyIdentifier": "",
    "ReadConfigurationFromKeyVault": false
  },
  "NLog": {
    "internalLogLevel": "Info",
    "autoReload": true,
    "internalLogFile": "${basedir}/logs/nlog.log",
    "internalLogToConsoleError": true,
    "throwExceptions": true,
    "extensions": [
      {
        "assembly": "NLog.Extensions.Logging"
      },
      {
        "assembly": "NLog.Web.AspNetCore"
      }
    ],
    "targets": {
      "file": {
        "type": "File",
        "archiveAboveSize": 5242880,
        "archiveNumbering": "Sequence",
        "maxArchiveFiles": 10,
        "archiveEvery": "Day",
        "concurrentWrites": "true",
        "fileName": "${basedir}/logs/${shortdate}.log",
        "layout": "${longdate}|${uppercase:${level}}|${logger}|${message} ${onexception:inner=${exception:format=ToString,StackTrace}}"
      },
      "console": {
        "type": "ColoredConsole",
        "useDefaultRowHighlightingRules": false,
        "layout": "${longdate}|${uppercase:${level}}|${logger}|${message} ${onexception:inner=${exception:format=ToString,StackTrace}}",
        "rowHighlightingRules": [
          {
            "condition": "level == LogLevel.Debug",
            "foregroundColor": "DarkGray"
          },
          {
            "condition": "level == LogLevel.Info",
            "foregroundColor": "Gray"
          },
          {
            "condition": "level == LogLevel.Warn",
            "foregroundColor": "Yellow"
          },
          {
            "condition": "level == LogLevel.Error",
            "foregroundColor": "Red"
          },
          {
            "condition": "level == LogLevel.Fatal",
            "foregroundColor": "Red",
            "backgroundColor": "White"
          }
        ]
      }
    },
    "rules": [
      {
        "logger": "*",
        "minLevel": "Trace",
        "writeTo": "file"
      },
      {
        "logger": "*",
        "minLevel": "Trace",
        "writeTo": "console"
      }
    ]
  }
}